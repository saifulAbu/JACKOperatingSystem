// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
      do Memory.init();
      do Math.init();
      do Output.init();
      do Keyboard.init();
      do Screen.init();

      do Main.main();
      do Sys.halt();
      return;
    }

    /** Halts the program execution. */
    function void halt() {
      while(true){

      }
      return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
      var int oneMSRun;
      var int counter;
      var int totalRun;

      if(duration < 0){
        do Sys.error(1);
      }

      let oneMSRun = 200;
      let counter = 0;
      let totalRun = oneMSRun * duration;

      while(counter < totalRun){
        let counter = counter + 1;
      }
      return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
      var String errorMsg;
      if(errorCode = 1){
        do Ouput.printString("Sys.wait, Duration must be positive");
      }
      if(errorCode = 2){
        do Ouput.printString("Array.new, Array size must be positive");
      }
      if(errorCode = 3){
        do Ouput.printString("Math.divide, Division by zero");
      }
      if(errorCode = 4){
        do Ouput.printString("Math.sqrt, Cannot compute square root of a negative number");
      }
      if(errorCode = 5){
        do Ouput.printString("Memory.alloc, Allocated memory size must be positive");
      }

      if(errorCode = 6){
        do Ouput.printString("Memory.alloc, Heap overflow");
      }

      if(errorCode = 7){
        do Ouput.printString("Screen.drawPixel, Illegal pixel coordinates");
      }

      if(errorCode = 8){
        do Ouput.printString("Screen.drawLine, Illegal line coordinates");
      }

      if(errorCode = 9){
        do Ouput.printString("Screen.drawRectangle, Illegal rectangle coordinates");
      }

      if(errorCode = 12){
        do Ouput.printString("Screen.drawCircle, Illegal center coordinates");
      }

      if(errorCode = 13){
        do Ouput.printString("Screen.drawCircle, Illegal radius");
      }

      if(errorCode = 14){
        do Ouput.printString("String.new, Maximum length must be non-negative");
      }

      if(errorCode = 15){
        do Ouput.printString("String.charAt, String index out of bounds");
      }

      if(errorCode = 16){
        do Ouput.printString("String.setCharAt, String index out of bounds");
      }

      if(errorCode = 17){
        do Ouput.printString("String.appendChar, String is full");
      }

      if(errorCode = 18){
        do Ouput.printString("String.eraseLastChar, String is empty");
      }

      if(errorCode = 19){
        do Ouput.printString("String.setInt, Insufficient string capacity");
      }

      if(errorCode = 20){
        do Ouput.printString("Output.moveCursor, Illegal cursor location");
      }

      do Output.println();
      do Sys.halt();
      return;
    }
}

/*
1   Sys.wait                 Duration must be positive
2   Array.new                Array size must be positive
3   Math.divide              Division by zero
4   Math.sqrt                Cannot compute square root of a negative number
5   Memory.alloc             Allocated memory size must be positive
6   Memory.alloc             Heap overflow
7   Screen.drawPixel         Illegal pixel coordinates
8   Screen.drawLine          Illegal line coordinates
9   Screen.drawRectangle     Illegal rectangle coordinates
12  Screen.drawCircle        Illegal center coordinates
13  Screen.drawCircle        Illegal radius
14  String.new               Maximum length must be non-negative
15  String.charAt            String index out of bounds
16  String.setCharAt         String index out of bounds
17  String.appendChar        String is full
18  String.eraseLastChar     String is empty
19  String.setInt            Insufficient string capacity
20  Output.moveCursor        Illegal cursor location
*/
